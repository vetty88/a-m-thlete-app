{"version":3,"sources":["actions/authActions.js","views/Landing/Landing.js","layouts/layout.js","views/PrivateRoute/PrivateRoute.js","index.js"],"names":["this","authenticated","cb","LandingPage","props","onClick","auth","login","history","push","AppLayout","logout","ProtectedRoute","Component","component","rest","render","isAuthenticated","to","pathname","state","from","location","App","className","exact","path","rootElement","document","getElementById","ReactDOM"],"mappings":"4LAoBe,M,WAnBb,aAAe,oBACbA,KAAKC,eAAgB,E,yCAGvB,SAAMC,GACJF,KAAKC,eAAgB,EACrBC,M,oBAGF,SAAOA,GACLF,KAAKC,eAAgB,EACrBC,M,6BAGF,WACE,OAAOF,KAAKC,kB,aCZHE,EAAc,SAAAC,GACzB,OACE,gCACE,8CACA,wBACEC,QAAS,WACPC,EAAKC,OAAM,WACTH,EAAMI,QAAQC,KAAK,YAHzB,uBCJOC,EAAY,SAAAN,GACrB,OACA,gCACI,4CACA,wBACIC,QAAU,WACNC,EAAKK,QAAO,WACRP,EAAMI,QAAQC,KAAK,SAH/B,wB,sBCJKG,EAAiB,SAAC,GAGtB,IAFIC,EAEL,EAFNC,UACGC,EACG,6BACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAS,SAAAZ,GACP,OAAIE,EAAKW,kBACA,cAACJ,EAAD,eAAeT,IAGpB,cAAC,IAAD,CACEc,GAAI,CACFC,SAAU,IACVC,MAAO,CACLC,KAAMjB,EAAMkB,kB,mBCLhC,SAASC,IACP,OACE,qBAAKC,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIZ,UAAaX,IACpC,cAAC,EAAD,CAAgBsB,OAAK,EAACC,KAAK,OAAOZ,UAAaJ,IAC/C,cAAC,IAAD,CAAOgB,KAAK,IAAIZ,UAAW,iBAAM,wBAMvC,IAAMa,EAAcC,SAASC,eAAe,QAC5CC,IAASd,OACP,cAAC,IAAD,UACE,cAACO,EAAD,MAEFI,K","file":"static/js/main.abcded94.chunk.js","sourcesContent":["class Auth {\r\n  constructor() {\r\n    this.authenticated = false;\r\n  }\r\n\r\n  login(cb) {\r\n    this.authenticated = true\r\n    cb();\r\n  }\r\n\r\n  logout(cb) {\r\n    this.authenticated = false\r\n    cb();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authenticated;\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n\r\n\r\n\r\n// import axios from \"axios\";\r\n// import setauthToken from \"../utils/setauthToken\";\r\n// import jwt_decode from \"jwt-decode\";\r\n\r\n// import { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n\r\n// // Register User\r\n// export const registerUser = (userData, history) => dispatch => {\r\n//   axios\r\n//     .post(\"/api/users/register\", userData)\r\n//     .then(res => history.push(\"/login\"))\r\n//     .catch(err =>\r\n//       dispatch({\r\n//         type: GET_ERRORS,\r\n//         payload: err.response.data\r\n//       })\r\n//     );\r\n// };\r\n\r\n// // Login - get user token\r\n// export const loginUser = userData => dispatch => {\r\n//   axios\r\n//     .post(\"/api/users/login\", userData)\r\n//     .then(res => {\r\n//       // Save to localStorage\r\n\r\n//       // Set token to localStorage\r\n//       const { token } = res.data;\r\n//       localStorage.setItem(\"jwtToken\", token);\r\n//       // Set token to auth header\r\n//       setauthToken(token);\r\n//       // Decode token to get user data\r\n//       const decoded = jwt_decode(token);\r\n//       // Set current user\r\n//       dispatch(setCurrentUser(decoded));\r\n//     })\r\n//     .catch(err =>\r\n//       dispatch({\r\n//         type: GET_ERRORS,\r\n//         payload: err.response.data\r\n//       })\r\n//     );\r\n// };\r\n\r\n// // Set logged in user\r\n// export const setCurrentUser = decoded => {\r\n//   return {\r\n//     type: SET_CURRENT_USER,\r\n//     payload: decoded\r\n//   };\r\n// };\r\n\r\n// // User loading\r\n// export const setUserLoading = () => {\r\n//   return {\r\n//     type: USER_LOADING\r\n//   };\r\n// };\r\n\r\n// // Log user out\r\n// export const logoutUser = () => dispatch => {\r\n//   // Remove token from local storage\r\n//   localStorage.removeItem(\"jwtToken\");\r\n//   // Remove auth header for future requests\r\n//   setauthToken(false);\r\n//   // Set current user to empty object {} which will set isauthenticated to false\r\n//   dispatch(setCurrentUser({}));\r\n// };","import React from 'react';\r\nimport auth from \"../../actions/authActions\";\r\n\r\n\r\nexport const LandingPage = props => {\r\n  return (\r\n    <div>\r\n      <h1>Landing Page</h1>\r\n      <button \r\n        onClick={() => {\r\n          auth.login(() => {\r\n            props.history.push(\"/app\");\r\n          });\r\n        }}\r\n        > \r\n          Login \r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// import React, { Component } from 'react';\r\n// import 'whatwg-fetch';\r\n\r\n// import {\r\n//   getFromStorage,\r\n//   setInStorage,\r\n// } from \"../../utils/storage.js\";\r\n\r\n// class Landing extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       isLoading: true,\r\n//       token: '',\r\n//       registerError: '',\r\n//       loginError: '',\r\n//       loginEmail: '',\r\n//       loginPassword: '',\r\n//       registerEmail: '',\r\n//       registerPassword: '',\r\n//     };\r\n\r\n//     this.onTextboxChangeLoginEmail = this.onTextboxChangeLoginEmail.bind(this);\r\n//     this.onTextboxChangeLoginPassword = this.onTextboxChangeLoginPassword.bind(this);\r\n//     this.onTextboxChangeRegisterEmail = this.onTextboxChangeRegisterEmail.bind(this);\r\n//     this.onTextboxChangeRegisterPassword = this.onTextboxChangeRegisterPassword.bind(this);\r\n    \r\n//     this.onLogin = this.onLogin.bind(this);\r\n//     this.onRegister = this.onRegister.bind(this);\r\n//     this.logout = this.logout.bind(this);\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const obj = getFromStorage('the_main_app');\r\n//     if (obj && obj.token) {\r\n//       const { token } = obj;\r\n//       // Verify token\r\n//       fetch('/api/account/verify?token=' + token)\r\n//         .then(res => res.json())\r\n//         .then(json => {\r\n//           if (json.success) {\r\n//             this.setState({\r\n//               token,\r\n//               isLoading: false\r\n//             });\r\n//           } else {\r\n//             this.setState({\r\n//               isLoading: false,\r\n//             });\r\n//           }\r\n//         });\r\n//     } else {\r\n//       this.setState({\r\n//         isLoading: false,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   onTextboxChangeLoginEmail(event) {\r\n//     this.setState({\r\n//       loginEmail: event.target.value,\r\n//     });\r\n//   }\r\n\r\n//   onTextboxChangeLoginPassword(event) {\r\n//     this.setState({\r\n//       loginPassword: event.target.value,\r\n//     });\r\n//   }\r\n\r\n//   onTextboxChangeRegisterEmail(event) {\r\n//     this.setState({\r\n//       registerEmail: event.target.value,\r\n//     });\r\n//   }\r\n\r\n//   onTextboxChangeRegisterPassword(event) {\r\n//     this.setState({\r\n//       registerPassword: event.target.value,\r\n//     });\r\n//   }\r\n\r\n//   onRegister() {\r\n//     // Grab state\r\n//     const {\r\n//       registerEmail,\r\n//       registerPassword,\r\n//     } = this.state;\r\n\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n\r\n//     // Post request to backend\r\n//     fetch('/api/account/register', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({\r\n//         email: registerEmail,\r\n//         password: registerPassword,\r\n//       }),\r\n//     }).then(res => res.json())\r\n//       .then(json => {\r\n//         console.log('json', json);\r\n//         if (json.success) {\r\n//           this.setState({\r\n//             registerError: json.message,\r\n//             isLoading: false,\r\n//             registerEmail: '',\r\n//             registerPassword: '',\r\n//           });\r\n//         } else {\r\n//           this.setState({\r\n//             registerError: json.message,\r\n//             isLoading: false,\r\n//           });\r\n//         }\r\n//       });\r\n//   }\r\n\r\n//   onLogin() {\r\n//     // Grab state\r\n//     const {\r\n//       loginEmail,\r\n//       loginPassword,\r\n//     } = this.state;\r\n\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n\r\n//     // Post request to backend\r\n//     fetch('/api/account/login', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({\r\n//         email: loginEmail,\r\n//         password: loginPassword,\r\n//       }),\r\n//     }).then(res => res.json())\r\n//       .then(json => {\r\n//         console.log('json', json);\r\n//         if (json.success) {\r\n//           setInStorage('the_main_app', { token: json.token });\r\n//           this.setState({\r\n//             loginError: json.message,\r\n//             isLoading: false,\r\n//             loginPassword: '',\r\n//             loginEmail: '',\r\n//             token: json.token,\r\n//           });\r\n//         } else {\r\n//           this.setState({\r\n//             loginError: json.message,\r\n//             isLoading: false,\r\n//           });\r\n//         }\r\n//       });\r\n//   }\r\n\r\n//   logout() {\r\n//     this.setState({\r\n//       isLoading: true,\r\n//     });\r\n//     const obj = getFromStorage('the_main_app');\r\n//     if (obj && obj.token) {\r\n//       const { token } = obj;\r\n//       // Verify token\r\n//       fetch('/api/account/logout?token=' + token)\r\n//         .then(res => res.json())\r\n//         .then(json => {\r\n//           if (json.success) {\r\n//             this.setState({\r\n//               token: '',\r\n//               isLoading: false\r\n//             });\r\n//           } else {\r\n//             this.setState({\r\n//               isLoading: false,\r\n//             });\r\n//           }\r\n//         });\r\n//     } else {\r\n//       this.setState({\r\n//         isLoading: false,\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const {\r\n//       isLoading,\r\n//       token,\r\n//       loginError,\r\n//       loginEmail,\r\n//       loginPassword,\r\n//       registerEmail,\r\n//       registerPassword,\r\n//       registerError,\r\n//     } = this.state;\r\n\r\n//     if (isLoading) {\r\n//       return (<div><p>Loading...</p></div>);\r\n//     }\r\n\r\n//     if (!token) {\r\n//       return (\r\n//         <div>\r\n//           <div>\r\n//             {\r\n//               (loginError) ? (\r\n//                 <p>{loginError}</p>\r\n//               ) : (null)\r\n//             }\r\n//             <p>Login</p>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={loginEmail}\r\n//               onChange={this.onTextboxChangeLoginEmail}\r\n//             />\r\n//             <br />\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={loginPassword}\r\n//               onChange={this.onTextboxChangeLoginPassword}\r\n//             />\r\n//             <br />\r\n//             <button onClick={this.onLogin}>Login</button>\r\n//           </div>\r\n//           <br />\r\n//           <br />\r\n//           <div>\r\n//             {\r\n//               (registerError) ? (\r\n//                 <p>{registerError}</p>\r\n//               ) : (null)\r\n//             }\r\n//             <p>Register</p>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//               value={registerEmail}\r\n//               onChange={this.onTextboxChangeRegisterEmail}\r\n//             /><br />\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Password\"\r\n//               value={registerPassword}\r\n//               onChange={this.onTextboxChangeRegisterPassword}\r\n//             /><br />\r\n//             <button onClick={this.onRegister}>Register</button>\r\n//           </div>\r\n\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     return (\r\n//       <div>\r\n//         <p>Account</p>\r\n//         <button onClick={this.logout}>Logout</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Landing;","import React from 'react';\r\nimport auth from \"../actions/authActions\"\r\n// import {withRouter} from \"react-router-dom/\";\r\n\r\nexport const AppLayout = props => {\r\n    return (\r\n    <div>\r\n        <h1>App layout</h1>\r\n        <button \r\n            onClick= {() => {\r\n                auth.logout(() => {\r\n                    props.history.push(\"/\");\r\n                });\r\n            }}\r\n        >\r\n        Logout\r\n        </button>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../actions/authActions\"\r\n\r\nexport const ProtectedRoute = ({\r\n  component: Component, \r\n  ...rest\r\n  }) => {\r\n    return (\r\n      <Route \r\n        {...rest} \r\n        render= {props => {\r\n          if (auth.isAuthenticated()) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return (\r\n              <Redirect \r\n                to={{\r\n                  pathname: \"/\",\r\n                  state: {\r\n                    from: props.location\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      />\r\n    );\r\n};\r\n  \r\n// import { Route, Redirect } from \"react-router-dom\";\r\n// import { connect } from \"react-redux\";\r\n// import PropTypes from \"prop-types\";\r\n// const PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render={props =>\r\n//       auth.isAuthenticated === true ? (\r\n//         <Component {...props} />\r\n//       ) : (\r\n//         <Redirect to=\"/login\" />\r\n//       )\r\n//     }\r\n//   />\r\n// );\r\n// PrivateRoute.propTypes = {\r\n//   auth: PropTypes.object.isRequired\r\n// };\r\n// const mapStateToProps = state => ({\r\n//   auth: state.auth\r\n// });\r\n// export default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import { createBrowserHistory } from \"history\";\r\n\r\nimport { LandingPage } from \"./views/Landing/Landing\";\r\nimport { AppLayout } from \"./layouts/layout\";\r\nimport { ProtectedRoute } from \"./views/PrivateRoute/PrivateRoute\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// core components\r\n// import Admin from \"./views/Admin/Admin\";\r\nimport \"./styles.css\";\r\n\r\nimport \"./assets/css/material-dashboard-react.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Switch>\r\n      <Route exact path= \"/\" component = {LandingPage} />\r\n      <ProtectedRoute exact path=\"/app\" component = {AppLayout} />\r\n      <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\r\n    </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>, \r\n  rootElement\r\n  );\r\n\r\n// const hist = createBrowserHistory();\r\n\r\n// ReactDOM.render(\r\n//   <Router history={hist}>\r\n//     <Switch>\r\n//       <Route path=\"/admin\" component={Admin} />\r\n//       <Redirect from=\"/\" to=\"/admin/dashboard\" />\r\n//     </Switch>\r\n//   </Router>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n"],"sourceRoot":""}