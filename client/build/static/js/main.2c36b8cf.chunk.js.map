{"version":3,"sources":["../node_modules/express/lib sync","components/Grid/index.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/API.js","components/Saved/index.js","components/Nav/index.js","pages/Save.js","components/Form/index.js","components/Search/index.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Container","fluid","children","className","Row","Col","size","split","map","join","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","express","require","app","mongoose","config","use","json","uri","process","ATLAS_URI","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","connection","once","console","log","query","axios","get","delete","savedCompetitions","post","Saved","props","savedcompetition","eventName","key","_id","src","image","alt","horse","resultNotes","href","link","target","rel","onClick","handleDeleteButton","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","window","location","includes","SaveCompetition","state","API","then","res","componentDidMount","catch","err","setState","data","this","Component","Form","value","search","name","placeholder","onChange","handleInputChange","handleFormSubmit","Search","competitions","competition","event","handleSavedButton","buttonText","SearchCompetitions","error","message","handleformSubmit","preventDefault","items","results","result","volumeInfo","horses","imageLinks","thumbnail","infoLink","handlecompetitionsButton","filter","App","exact","path","component","Save","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2c36b8cf.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 290;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      <h1 className=\"text-white pt-5 jumboeventName\">Equestrian Competitions</h1>\r\n      <h3 className=\"text-white pt-5 jumboText\">Find and Save Competitions of Interest</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import axios from \"axios\";\nconst express  = require('express');\nlet app = express();\nconst mongoose = require('mongoose');\nrequire('dotenv').config(); // configures dotenv\napp.use(express.json());\n// MongoDB connection with ATLAS and Mongoose\n// connects to the value within the .env file\nconst uri = process.env.ATLAS_URI;\n// connects mongoose to the uri and sets some mongoose keys to true to combat mongoose's deprecation warnings\nmongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true});\nconst connection = mongoose.connection;\n// make sure that MongoDB connected successfully\nconnection.once('open', () => {\nconsole.log(\"MongoDB database connected!!\");\n});\n\n\nexport default {\n    // Get competition from Equestrian Competitions \n    getSearchCompetitions: function(query) {\n        return axios.get(connection + query);\n    },\n  // Gets all competitions\n  getCompetitions: function() {\n    return axios.get(\"/api/competitions\");\n  },\n  // Gets the competition with the given id\n  getCompetition: function(id) {\n    return axios.get(\"/api/competitions/\" + id);\n  },\n  // Deletes the competition with the given id\n  deleteCompetition: function(id) {\n    return axios.delete(\"/api/competitions/\" + id);\n  },\n  // Completes a competition to the database\n  saveCompetition: function(savedCompetitions) {\n    return axios.post(\"/api/competitions\", savedCompetitions);\n  }\n};\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Saved = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"searchContainer\">\r\n          {props.savedCompetitions.map((savedcompetition) => {\r\n            return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"row no-gutters\" \r\n                   id={savedcompetition.eventName}\r\n                  key={savedcompetition._id}>\r\n                <div className=\"col-sm-3\">\r\n                <img \r\n                  key\r\n                  src={savedcompetition.image} \r\n                  alt={savedcompetition.eventName} \r\n                  className=\"img-fluid card-image mt-3\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"card-body\">\r\n                    <h3 className=\"card-title\">{savedcompetition.eventName}</h3>\r\n                    <h4 className=\"card-text\">horse: {savedcompetition.horse}</h4>\r\n                    <h6 className=\"card-text\">{savedcompetition.resultNotes}</h6>\r\n                    <a href={savedcompetition.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    More details...\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className = \"row btnRow\">\r\n                <a href=\"/\">\r\n                <button className=\"backToSearchBtn btn btn-light viewBtn ml-auto mr-2\">\r\n                    Back to Search Page\r\n                  </button>\r\n                </a>\r\n\r\n                <button\r\n                  className=\"saveCompetition btn btn-light mr-3\"\r\n                  id={savedcompetition._id}\r\n                  onClick={() => props.handleDeleteButton(savedcompetition._id)}\r\n                >\r\n                  Delete Competition\r\n                </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport { Container } from \"../Grid\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n      <Container>\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        EQUESTRIAN COMPETITIONS\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon text-white\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav d-flex  ml-auto mt-2 mt-lg-0\">\r\n          {!window.location.href.includes(\"saved\") ? (\r\n            \"\"\r\n          ) : (\r\n          <li className=\"nav-item\" id=\"home\">\r\n            <a className=\"nav-link mr-4\" href=\"/\" id=\"btnSearch\">\r\n              Home\r\n            </a>\r\n          </li>\r\n          )}\r\n           {window.location.href.includes(\"/saved\") ? (\r\n            \"\"\r\n          ) : (\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/saved\" id=\"btnSaved\">\r\n              View Saved Competitions\r\n            </a>\r\n          </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      </Container>\r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container } from \"../components/Grid\";\r\nimport Saved from \"../components/Saved\";\r\nimport Nav from \"../components/Nav\";\r\n\r\nclass SaveCompetition extends Component {\r\n  state = {\r\n    savedCompetitions: [],\r\n  };\r\n\r\n  //get all competitions saved to the database\r\n  componentDidMount() {\r\n    API.getCompetitions()\r\n      .then((res) => this.setState({ savedCompetitions: res.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //delete competition by id\r\n  handleDeleteButton = (id) => {\r\n    API.deleteCompetition(id)\r\n      .then((res) => this.componentDidMount())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Nav/>\r\n        <Jumbotron/>\r\n\r\n        <Container>\r\n          <Saved\r\n            savedCompetitions={this.state.savedCompetitions}\r\n            handleDeleteButton={this.handleDeleteButton}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveCompetition;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group row\">\r\n        <label className=\"CompetitionSearchLabel\">\r\n          <h2 className=\"searcheventName ml-5\">Enter a Competition eventName or Horse Name</h2>\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <input\r\n          className=\"form-control mx-auto input\"\r\n          value={props.search}\r\n          type=\"text\"\r\n          name=\"searchCompetition\"\r\n          placeholder=\"Top Teams Horse Trials\"\r\n          onChange={props.handleInputChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-group row col-sm-12 justify-content-end\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-light submitBtn mb-3 mr-2\"\r\n          onClick={props.handleFormSubmit}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"searchContainer\">\r\n        {props.competitions.map((competition) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-sm-3\">\r\n                  <img \r\n                  key\r\n                  src={competition.image} \r\n                  alt={competition.eventName} \r\n                  className=\"img-fluid card-image mt-3\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                  <div className=\"card-body\">\r\n                    <h3 className=\"card-eventName\">{competition.eventName}</h3>\r\n                    <h4 className=\"card-text\">Written by {competition.horse}</h4>\r\n                    <h6 className=\"card-text\">{competition.resultNotes}</h6>\r\n                    <a href={competition.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    More details...\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <button\r\n                  className=\"saveCompetition btn btn-light ml-auto mr-2\"\r\n                  id={competition.id} \r\n                  onClick={(event) => props.handleSavedButton(event)}\r\n                > {competition.buttonText}\r\n                </button>\r\n\r\n                <a href=\"/saved\">\r\n                <button className=\"viewSavedBtn btn btn-light ml-auto mr-3\">\r\n                View Saved Competitions\r\n                </button>\r\n                </a>\r\n\r\n              </div>\r\n            </div>\r\n            \r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport Form from \"../components/Form\";\r\nimport Search from \"../components/Search\";\r\nimport Nav from \"../components/Nav\";\r\n// import Footer from \"../components/Footer\"\r\n\r\nclass SearchCompetitions extends Component {\r\n  //initial state\r\n  state = {\r\n    search: \"Dressage Jackpot\",\r\n    competitions: [],\r\n    error: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  //function for Competitions bar\r\n  handleInputChange = (event) => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  //function for submit button on Competitions form\r\n  handleformSubmit = (event) => {\r\n    event.preventDefault();\r\n    // once it clicks it connects to the Equestrian competition api with the Competitions value\r\n    API.getSearchCompetitions(this.state.search)\r\n      .then((res) => {\r\n        if (res.data.items === \"error\") {\r\n          throw new Error(res.data.items);\r\n        } else {\r\n          // store response in a array\r\n          let results = res.data.items;\r\n          //map through array\r\n          results = results.map((result) => {\r\n            //store each competition in a new object\r\n            result = {\r\n              key: result.id,\r\n              id: result.id,\r\n              eventName: result.volumeInfo.eventName,\r\n              horse: result.volumeInfo.horses,\r\n              resultNotes: result.volumeInfo.resultNotes,\r\n              image: result.volumeInfo.imageLinks.thumbnail,\r\n              link: result.volumeInfo.infoLink,\r\n              buttonText: \"Complete competition\"\r\n            };\r\n            return result;\r\n          });\r\n          // reset state\r\n          this.setState({ competitions: results, error: \"\" });\r\n        }\r\n      })\r\n      .catch((err) => this.setState({ error: err.items }));\r\n  };\r\n\r\n  handlecompetitionsButton = (event) => {\r\n    // console.log(event)\r\n    event.preventDefault();\r\n    console.log(this.state.competitions);\r\n    console.log(event.target.id);\r\n    let savedCompetitions = this.state.competitions.filter(\r\n      (competition) => competition.id === event.target.id\r\n    );\r\n    savedCompetitions = savedCompetitions[0];\r\n    console.log(savedCompetitions);\r\n    API.saveCompetition(savedCompetitions)\r\n      .then(this.setState({ competitions: this.state.competitions.map(competition=>{\r\n        if (competition.id === event.target.id){\r\n          return {\r\n            ...competition, buttonText: \"competitions!\"\r\n          }\r\n        } else {\r\n          return competition;\r\n        }\r\n      })\r\n     }))\r\n      .catch((err) => console.log(\"ERROR\", err));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n      <Nav/>\r\n        <Jumbotron/>\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"12\">\r\n              <Form\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                handleInputChange={this.handleInputChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br></br>\r\n        <Container>\r\n          <Search\r\n            competitions={this.state.competitions}\r\n            handleSavedButton={this.handleSavedButton}\r\n          />\r\n        </Container>\r\n        {/* <Footer/> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCompetitions;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Save from \"./pages/Save\";\nimport Search from \"./pages/Search\"\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Save} />\n          <Route exact path=\"/saved/:id\" component={Save} />\n          <Route component={NoMatch} /> \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === \"[::1]\" ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener(\"load\", () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (!isLocalhost) {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        } else {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === \"installed\") {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log(\"New content is available; please refresh.\");\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log(\"Content is cached for offline use.\");\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error during service worker registration:\", error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          \"No internet connection found. App is running in offline mode.\"\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();"],"sourceRoot":""}