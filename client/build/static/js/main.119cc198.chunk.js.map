{"version":3,"sources":["components/Jumbotron/index.js","components/Nav/index.js","components/Input/index.js","components/Button/index.js","utils/API.js","components/Grid/index.js","components/CompetitionList/index.js","App.js","index.js"],"names":["Jumbotron","className","target","rel","href","Nav","Input","props","type","Button","children","onClick","join","query","axios","get","params","q","Container","fluid","Row","Col","size","split","map","CompetitionList","CompetitionListItem","title","EventNames","App","useState","Competitions","setCompetitions","CompetitionSearch","setCompetitionSearch","name","value","onChange","event","placeholder","preventDefault","API","then","res","data","catch","err","console","log","length","Competition","key","eventNames","thumbnail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.119cc198.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1>Equestrian Competition App</h1>\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.Competitionpuppy.com/about/api/\">\r\n        Powered by Amthlete\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n       Equestrian App\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","// import axios from \"axios\";\n// const express  = require('express');\nimport axios from \"axios\";\n\n// The getCompetitions method retrieves Competitions from the server\n// It accepts a \"query\" or term to search the Competition api for\nexport default {\n  getCompetitions: function(query) {\n    return axios.get(\"/api/competitions\", { params: { q: query } });\n  }\n};\n\n\n\n\n// let app = express();\n// const mongoose = require('mongoose');\n// require('dotenv').config(); // configures dotenv\n// app.use(express.json());\n// // MongoDB connection with ATLAS and Mongoose\n// // connects to the value within the .env file\n// const uri = process.env.ATLAS_URI;\n// // connects mongoose to the uri and sets some mongoose keys to true to combat mongoose's deprecation warnings\n// mongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true});\n// const connection = mongoose.connection;\n// // make sure that MongoDB connected successfully\n// connection.once('open', () => {\n// console.log(\"MongoDB database connected!!\");\n// });\n\n\n// export default {\n//     // Get competition from Equestrian Competitions \n//     getSearchCompetitions: function(query) {\n//         return axios.get(connection + query);\n//     },\n//   // Gets all competitions\n//   getCompetitions: function() {\n//     return axios.get(\"/api/competitions\");\n//   },\n//   // Gets the competition with the given id\n//   getCompetition: function(id) {\n//     return axios.get(\"/api/competitions/\" + id);\n//   },\n//   // Deletes the competition with the given id\n//   deleteCompetition: function(id) {\n//     return axios.delete(\"/api/competitions/\" + id);\n//   },\n//   // Completes a competition to the database\n//   saveCompetition: function(savedCompetitions) {\n//     return axios.post(\"/api/competitions\", savedCompetitions);\n//   }\n// };\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n// import Thumbnail from \"../Thumbnail\";\nimport { Container, Row, Col } from \"../Grid\";\n\n// Exporting both CompetitionList and CompetitionListItem from this file\n\n// CompetitionList renders a bootstrap list item\nexport function CompetitionList({ children }) {\n  return <ul className=\"list-group\">{children}</ul>;\n}\n\n// CompetitionListItem renders a bootstrap list item containing data from the Competition api call\nexport function CompetitionListItem({\n  // thumbnail,\n  title,\n  EventNames,\n  href\n}) {\n  return (\n    <li className=\"list-group-item\">\n      <Container>\n        <Row>\n          <Col size=\"xs-4 sm-2\">\n            {/* <Thumbnail src={thumbnail || \"https://placehold.it/300x300\"} /> */}\n          </Col>\n          <Col size=\"xs-8 sm-9\">\n            <h3>{title}</h3>\n            <p>EventNames: {EventNames}</p>\n            <a rel=\"noreferrer noopener\" target=\"_blank\" href={href}>\n              Go to Competition!\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    </li>\n  );\n}\n","import React, { useState } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Nav from \"./components/Nav\";\nimport Input from \"./components/Input\";\nimport Button from \"./components/Button\";\nimport API from \"./utils/API\";\nimport { CompetitionList, CompetitionListItem } from \"./components/CompetitionList\";\nimport { Container, Row, Col } from \"./components/Grid\";\n\nfunction App() {\n\n  const [Competitions, setCompetitions] = useState([]);\n  const [CompetitionSearch, setCompetitionSearch] = useState(\"\");\n\n  const handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { value } = event.target;\n    setCompetitionSearch(value);\n  };\n\n  const handleFormSubmit = event => {\n    // When the form is submitted, prevent its default behavior, get Competitions update the Competitions state\n    event.preventDefault();\n    API.getCompetitions(CompetitionSearch)\n      .then(res => setCompetitions(res.data))\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Nav />\n      <Jumbotron />\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input\n                      name=\"CompetitionSearch\"\n                      value={CompetitionSearch}\n                      onChange={handleInputChange}\n                      placeholder=\"Search For a Competition\"\n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <Button\n                      onClick={handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"xs-12\">\n            {!Competitions.length ? (\n              <h1 className=\"text-center\">No Competitions to Display</h1>\n            ) : (\n              <CompetitionList>\n                {Competitions.map(Competition => {\n                  return (\n                    <CompetitionListItem\n                      key={Competition.title}\n                      title={Competition.title}\n                      href={Competition.href}\n                      eventNames={Competition.eventNames}\n                      thumbnail={Competition.thumbnail}\n                    />\n                  );\n                })}\n              </CompetitionList>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}