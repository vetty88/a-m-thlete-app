{"ast":null,"code":"import _objectSpread from\"C:/Users/vetty/AppData/Roaming/npm/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{Component}from\"react\";import API from\"../utils/API\";import Jumbotron from\"../components/Jumbotron\";import{Container,Row,Col}from\"../components/Grid\";import Form from\"../components/Form\";import Search from\"../components/Search\";import Nav from\"../components/Nav\";// import Footer from \"../components/Footer\"\nclass SearchCompetitions extends Component{constructor(...args){super(...args);this.state={search:\"Dressage Jackpot\",competitions:[],error:\"\",message:\"\"};this.handleInputChange=event=>{this.setState({search:event.target.value});};this.handleFormBtnSubmit=event=>{event.preventDefault();// once it clicks it connects to the Equestrian competition api with the Competitions value\nAPI.getEquestrianDBCompetitions(this.state.search).then(res=>{if(res.data.items===\"error\"){throw new Error(res.data.items);}else{// store response in a array\nvar results=res.data.items;//map through array\nresults=results.map(result=>{//store each competition in a new object\nresult={key:result.id,id:result.id,eventName:result.volumeInfo.eventName,horse:result.volumeInfo.horses,resultNotes:result.volumeInfo.resultNotes,image:result.volumeInfo.imageLinks.thumbnail,link:result.volumeInfo.infoLink,buttonText:\"Complete competition\"};return result;});// reset state\nthis.setState({competitions:results,error:\"\"});}}).catch(err=>this.setState({error:err.items}));};this.handlecompetitionsButton=event=>{// console.log(event)\nevent.preventDefault();console.log(this.state.competitions);console.log(event.target.id);var savedCompetitions=this.state.competitions.filter(competition=>competition.id===event.target.id);savedCompetitions=savedCompetitions[0];console.log(savedCompetitions);API.saveCompetition(savedCompetitions).then(this.setState({competitions:this.state.competitions.map(competition=>{if(competition.id===event.target.id){return _objectSpread(_objectSpread({},competition),{},{buttonText:\"competitions!\"});}else{return competition;}})})).catch(err=>console.log(\"ERROR\",err));};}render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsx(Jumbotron,{}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{size:\"12\",children:/*#__PURE__*/_jsx(Form,{handleFormSubmit:this.handleFormSubmit,handleInputChange:this.handleInputChange})})})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Search,{competitions:this.state.competitions,handleSavedButton:this.handleSavedButton})})]});}}export default SearchCompetitions;","map":{"version":3,"sources":["C:/MONASH BOOTCAMP/YW_Amthlete-App/amthlete-app/client/src/pages/Search.js"],"names":["React","Component","API","Jumbotron","Container","Row","Col","Form","Search","Nav","SearchCompetitions","state","search","competitions","error","message","handleInputChange","event","setState","target","value","handleFormBtnSubmit","preventDefault","getEquestrianDBCompetitions","then","res","data","items","Error","results","map","result","key","id","eventName","volumeInfo","horse","horses","resultNotes","image","imageLinks","thumbnail","link","infoLink","buttonText","catch","err","handlecompetitionsButton","console","log","savedCompetitions","filter","competition","saveCompetition","render","handleFormSubmit","handleSavedButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport Form from \"../components/Form\";\r\nimport Search from \"../components/Search\";\r\nimport Nav from \"../components/Nav\";\r\n// import Footer from \"../components/Footer\"\r\n\r\nclass SearchCompetitions extends Component {\r\n  //initial state\r\n  state = {\r\n    search: \"Dressage Jackpot\",\r\n    competitions: [],\r\n    error: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  //function for Competitions bar\r\n  handleInputChange = (event) => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  //function for submit button on Competitions FormBtn\r\n  handleFormBtnSubmit = (event) => {\r\n    event.preventDefault();\r\n    // once it clicks it connects to the Equestrian competition api with the Competitions value\r\n    API.getEquestrianDBCompetitions(this.state.search)\r\n      .then((res) => {\r\n        if (res.data.items === \"error\") {\r\n          throw new Error(res.data.items);\r\n        } else {\r\n          // store response in a array\r\n          let results = res.data.items;\r\n          //map through array\r\n          results = results.map((result) => {\r\n            //store each competition in a new object\r\n            result = {\r\n              key: result.id,\r\n              id: result.id,\r\n              eventName: result.volumeInfo.eventName,\r\n              horse: result.volumeInfo.horses,\r\n              resultNotes: result.volumeInfo.resultNotes,\r\n              image: result.volumeInfo.imageLinks.thumbnail,\r\n              link: result.volumeInfo.infoLink,\r\n              buttonText: \"Complete competition\"\r\n            };\r\n            return result;\r\n          });\r\n          // reset state\r\n          this.setState({ competitions: results, error: \"\" });\r\n        }\r\n      })\r\n      .catch((err) => this.setState({ error: err.items }));\r\n  };\r\n\r\n  handlecompetitionsButton = (event) => {\r\n    // console.log(event)\r\n    event.preventDefault();\r\n    console.log(this.state.competitions);\r\n    console.log(event.target.id);\r\n    let savedCompetitions = this.state.competitions.filter(\r\n      (competition) => competition.id === event.target.id\r\n    );\r\n    savedCompetitions = savedCompetitions[0];\r\n    console.log(savedCompetitions);\r\n    API.saveCompetition(savedCompetitions)\r\n      .then(this.setState({ competitions: this.state.competitions.map(competition=>{\r\n        if (competition.id === event.target.id){\r\n          return {\r\n            ...competition, buttonText: \"competitions!\"\r\n          }\r\n        } else {\r\n          return competition;\r\n        }\r\n      })\r\n     }))\r\n      .catch((err) => console.log(\"ERROR\", err));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n      <Nav/>\r\n        <Jumbotron/>\r\n        <Container>\r\n          <Row>\r\n            <Col size=\"12\">\r\n              <Form\r\n                handleFormSubmit={this.handleFormSubmit}\r\n                handleInputChange={this.handleInputChange}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br></br>\r\n        <Container>\r\n          <Search\r\n            competitions={this.state.competitions}\r\n            handleSavedButton={this.handleSavedButton}\r\n          />\r\n        </Container>\r\n        {/* <Footer/> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCompetitions;"]},"metadata":{},"sourceType":"module"}