{"ast":null,"code":"import axios from\"axios\";export default{// Get competition from Equestrian Competitions \ngetSearchCompetitionsCompetitions:function getSearchCompetitionsCompetitions(query){return axios.get(connection+query);},// Gets all competitions\ngetCompetitions:function getCompetitions(){return axios.get(\"/api/competitions\");},// Gets the competition with the given id\ngetCompetition:function getCompetition(id){return axios.get(\"/api/competitions/\"+id);},// Deletes the competition with the given id\ndeleteCompetition:function deleteCompetition(id){return axios.delete(\"/api/competitions/\"+id);},// Completes a competition to the database\nsaveCompetition:function saveCompetition(savedCompetitions){return axios.post(\"/api/competitions\",savedCompetitions);}};","map":{"version":3,"sources":["C:/MONASH BOOTCAMP/YW_Amthlete-App/amthlete-app/client/src/utils/API.js"],"names":["axios","getSearchCompetitionsCompetitions","query","get","connection","getCompetitions","getCompetition","id","deleteCompetition","delete","saveCompetition","savedCompetitions","post"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,cAAe,CACX;AACAC,iCAAiC,CAAE,2CAASC,KAAT,CAAgB,CAC/C,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAUC,UAAU,CAAGF,KAAvB,CAAP,CACH,CAJU,CAKb;AACAG,eAAe,CAAE,0BAAW,CAC1B,MAAOL,CAAAA,KAAK,CAACG,GAAN,CAAU,mBAAV,CAAP,CACD,CARY,CASb;AACAG,cAAc,CAAE,wBAASC,EAAT,CAAa,CAC3B,MAAOP,CAAAA,KAAK,CAACG,GAAN,CAAU,qBAAuBI,EAAjC,CAAP,CACD,CAZY,CAab;AACAC,iBAAiB,CAAE,2BAASD,EAAT,CAAa,CAC9B,MAAOP,CAAAA,KAAK,CAACS,MAAN,CAAa,qBAAuBF,EAApC,CAAP,CACD,CAhBY,CAiBb;AACAG,eAAe,CAAE,yBAASC,iBAAT,CAA4B,CAC3C,MAAOX,CAAAA,KAAK,CAACY,IAAN,CAAW,mBAAX,CAAgCD,iBAAhC,CAAP,CACD,CApBY,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    // Get competition from Equestrian Competitions \n    getSearchCompetitionsCompetitions: function(query) {\n        return axios.get(connection + query)\n    },\n  // Gets all competitions\n  getCompetitions: function() {\n    return axios.get(\"/api/competitions\");\n  },\n  // Gets the competition with the given id\n  getCompetition: function(id) {\n    return axios.get(\"/api/competitions/\" + id);\n  },\n  // Deletes the competition with the given id\n  deleteCompetition: function(id) {\n    return axios.delete(\"/api/competitions/\" + id);\n  },\n  // Completes a competition to the database\n  saveCompetition: function(savedCompetitions) {\n    return axios.post(\"/api/competitions\", savedCompetitions);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}