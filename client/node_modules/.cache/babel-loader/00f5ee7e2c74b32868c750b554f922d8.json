{"ast":null,"code":"// import axios from \"axios\";\n// const express  = require('express');\nimport axios from\"axios\";// The getCompetitions method retrieves Competitions from the server\n// It accepts a \"query\" or term to search the Competition api for\nexport default{getCompetitions:function getCompetitions(query){return axios.get(\"/api/competitions\",{params:{q:query}});}};// let app = express();\n// const mongoose = require('mongoose');\n// require('dotenv').config(); // configures dotenv\n// app.use(express.json());\n// // MongoDB connection with ATLAS and Mongoose\n// // connects to the value within the .env file\n// const uri = process.env.ATLAS_URI;\n// // connects mongoose to the uri and sets some mongoose keys to true to combat mongoose's deprecation warnings\n// mongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true});\n// const connection = mongoose.connection;\n// // make sure that MongoDB connected successfully\n// connection.once('open', () => {\n// console.log(\"MongoDB database connected!!\");\n// });\n// export default {\n//     // Get competition from Equestrian Competitions \n//     getSearchCompetitions: function(query) {\n//         return axios.get(connection + query);\n//     },\n//   // Gets all competitions\n//   getCompetitions: function() {\n//     return axios.get(\"/api/competitions\");\n//   },\n//   // Gets the competition with the given id\n//   getCompetition: function(id) {\n//     return axios.get(\"/api/competitions/\" + id);\n//   },\n//   // Deletes the competition with the given id\n//   deleteCompetition: function(id) {\n//     return axios.delete(\"/api/competitions/\" + id);\n//   },\n//   // Completes a competition to the database\n//   saveCompetition: function(savedCompetitions) {\n//     return axios.post(\"/api/competitions\", savedCompetitions);\n//   }\n// };","map":{"version":3,"sources":["C:/MONASH BOOTCAMP/YW_Amthlete-App/amthlete-app/client/src/utils/API.js"],"names":["axios","getCompetitions","query","get","params","q"],"mappings":"AAAA;AACA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AACA,cAAe,CACbC,eAAe,CAAE,yBAASC,KAAT,CAAgB,CAC/B,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAU,mBAAV,CAA+B,CAAEC,MAAM,CAAE,CAAEC,CAAC,CAAEH,KAAL,CAAV,CAA/B,CAAP,CACD,CAHY,CAAf,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from \"axios\";\n// const express  = require('express');\nimport axios from \"axios\";\n\n// The getCompetitions method retrieves Competitions from the server\n// It accepts a \"query\" or term to search the Competition api for\nexport default {\n  getCompetitions: function(query) {\n    return axios.get(\"/api/competitions\", { params: { q: query } });\n  }\n};\n\n\n\n\n// let app = express();\n// const mongoose = require('mongoose');\n// require('dotenv').config(); // configures dotenv\n// app.use(express.json());\n// // MongoDB connection with ATLAS and Mongoose\n// // connects to the value within the .env file\n// const uri = process.env.ATLAS_URI;\n// // connects mongoose to the uri and sets some mongoose keys to true to combat mongoose's deprecation warnings\n// mongoose.connect(uri, { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true});\n// const connection = mongoose.connection;\n// // make sure that MongoDB connected successfully\n// connection.once('open', () => {\n// console.log(\"MongoDB database connected!!\");\n// });\n\n\n// export default {\n//     // Get competition from Equestrian Competitions \n//     getSearchCompetitions: function(query) {\n//         return axios.get(connection + query);\n//     },\n//   // Gets all competitions\n//   getCompetitions: function() {\n//     return axios.get(\"/api/competitions\");\n//   },\n//   // Gets the competition with the given id\n//   getCompetition: function(id) {\n//     return axios.get(\"/api/competitions/\" + id);\n//   },\n//   // Deletes the competition with the given id\n//   deleteCompetition: function(id) {\n//     return axios.delete(\"/api/competitions/\" + id);\n//   },\n//   // Completes a competition to the database\n//   saveCompetition: function(savedCompetitions) {\n//     return axios.post(\"/api/competitions\", savedCompetitions);\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}