{"version":3,"sources":["components/DeleteBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Competitions.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["DeleteBtn","props","className","role","tabIndex","Jumbotron","children","style","height","clear","paddingTop","textAlign","axios","get","id","delete","competitionData","post","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","eventTypeOptions","value","label","Competitions","useState","competitions","setCompetitions","formObject","setFormObject","loadCompetitions","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","useEffect","onChange","placeholder","onClick","options","disabled","eventName","horse","preventDefault","eventType","disciplines","penalties","place","images","resultNotes","date","length","competition","to","_id","Detail","setCompetition","useParams","NoMatch","aria-label","Nav","href","Footer","App","Fragment","path","component","from","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2544e352.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The ...props means, spread all of the passed props onto this element\r\n// That way we don't have to define them all individually\r\nfunction DeleteBtn(props) {\r\n  return (\r\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\r\n      ✗\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n      className=\"jumbotron\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all competitions\r\n  getCompetitions: function() {\r\n    return axios.get(\"/api/competitions\");\r\n  },\r\n  // Gets the competition with the given id\r\n  getCompetition: function(id) {\r\n    return axios.get(\"/api/competitions/\" + id);\r\n  },\r\n  // Deletes the competition with the given id\r\n  deleteCompetition: function(id) {\r\n    return axios.delete(\"/api/competitions/\" + id);\r\n  },\r\n  // Saves a competition to the database\r\n  saveCompetition: function(competitionData) {\r\n    return axios.post(\"/api/competitions\", competitionData);\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// This file exports both the List and ListItem components\r\n\r\nexport function List({ children }) {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">{children}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ListItem({ children }) {\r\n  return <li className=\"list-group-item\">{children}</li>;\r\n}","import React from \"react\";\r\n\r\n// This file exports the Input, TextArea, and FormBtn components\r\n\r\nexport function Input(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input className=\"form-control\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TextArea(props) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport function FormBtn(props) {\r\n  return (\r\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport Select from 'react-select';\r\n\r\nconst eventTypeOptions = [\r\n  { value: 'dressage', label: 'Dressage' }, \r\n  { value:'showJumping', label: 'Show Jumping' },\r\n  { value: 'showing', label: 'Showing' },\r\n  { value: 'horseTrials', label: 'Horse Trials' }, \r\n  { value: 'combinedTraining', label: 'Combined Training' }\r\n];\r\n\r\n  // const [startDate, setStartDate] = useState(new Date());\r\n\r\n\r\nfunction Competitions() {\r\n  // Setting our component's initial state\r\n  const [competitions, setCompetitions] = useState([]);\r\n  const [formObject, setFormObject] = useState({});\r\n\r\n  // Load all books and store them with setBooks\r\n  useEffect(() => {\r\n    loadCompetitions();\r\n  }, []);\r\n\r\n  // Loads all books and sets them to books\r\n  function loadCompetitions() {\r\n    API.getCompetitions()\r\n      .then(res => \r\n        setCompetitions(res.data)\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Deletes a competition from the database with a given id, then reloads books from the db\r\n  function deleteCompetition(id) {\r\n    API.deleteCompetition(id)\r\n      .then(res => loadCompetitions())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormObject({...formObject, [name]: value});\r\n  }\r\n\r\n  // When the form is submitted, use the API.saveCompetition method to save the competition data\r\n  // Then reload books from the database\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n  if (formObject.eventName && formObject.horse) {\r\n      API.saveCompetition({\r\n              eventName: formObject.eventName,\r\n              eventType: formObject.eventType,\r\n              horse: formObject.horse,\r\n              disciplines: formObject.disciplines,\r\n              penalties: formObject.penalties,\r\n              place: formObject.place,\r\n              images: formObject.images,\r\n              resultNotes: formObject.resultNotes,\r\n              date: formObject.date\r\n          })\r\n          .then(res => loadCompetitions())\r\n          .catch(err => console.log(err));\r\n    }\r\n  }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>What Competitions Should I Enter?</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                onChange={handleInputChange}\r\n                name=\"eventName\"\r\n                placeholder=\"EventName (required)\"\r\n              />\r\n\r\n            Event Type:\r\n            <Select \r\n             onClick={handleInputChange}\r\n             name=\"eventType\"\r\n             placeholder=\"EventType (required)\"\r\n              options={eventTypeOptions} />\r\n   \r\n             <Input\r\n                onChange={handleInputChange}\r\n                name=\"horse\"\r\n                placeholder=\"Horse (required)\"\r\n              />\r\n              <TextArea\r\n                onChange={handleInputChange}\r\n                name=\"resultNotes\"\r\n                placeholder=\"ResultNotes (Optional)\"\r\n              />\r\n\r\n              <FormBtn\r\n                disabled={!(formObject.eventName && formObject.horse)}\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Submit Competition\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Competitions On My List</h1>\r\n            </Jumbotron>\r\n            {competitions.length ? (\r\n              <List>\r\n                {competitions.map(competition => (\r\n                  <ListItem key={competition._id}>\r\n                    <Link to={\"/competitions/\" + competition._id}>\r\n                      <strong>\r\n                        {competition.eventName} with {competition.horse}\r\n                      </strong>\r\n                    </Link>\r\n                    <DeleteBtn onClick={() => deleteCompetition(competition._id)} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h3>No Results to Display</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  // end Competitions function\r\n\r\n\r\nexport default Competitions;","  \r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction Detail(props) {\r\n  const [competition, setCompetition] = useState({});\r\n\r\n  // When this component mounts, grab the competition with the _id of props.match.params.id\r\n  // e.g. localhost:3000/competitions/599dcb67f0f16317844583fc\r\n  const {id} = useParams();\r\n  useEffect(() => {\r\n    API.getCompetition(id)\r\n      .then(res => setCompetition(res.data))\r\n      .catch(err => console.log(err));\r\n  }, [id]);\r\n\r\n  return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-12\">\r\n            <Jumbotron>\r\n              <h1>\r\n                {competition.eventName} with {competition.horse}\r\n              </h1>\r\n            </Jumbotron>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-10 md-offset-1\">\r\n            <article>\r\n\t<h1>ResultNotes</h1>\r\n\t\t<p>\r\n\t\t  {competition.eventName}\r\n      </p>\r\n    <p>\r\n      {competition.eventType}\r\n      </p>\r\n    <p>\r\n      {competition.horse}\r\n      </p>\r\n   \r\n    <p>\r\n      {competition.penalties}\r\n      </p>\r\n    <p>\r\n      {competition.place}\r\n      </p>\r\n    <p>\r\n      {competition.images}\r\n      </p>\r\n    <p>\r\n      {competition.resultNotes}\r\n    </p>\r\n\t\r\n            </article>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col size=\"md-2\">\r\n            <Link to=\"/\">← Back to Horses</Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        React Equestrian Competition List\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n\t<footer className = \"page-footer\">\r\n\t\t<div className = \"container-fluid text-center\">\r\n\t\t\t<p>Equestrian Competition Tracker - Y Waller</p>\r\n\t\t</div>\t\r\n\t</footer>\r\n);\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Competitions from \"./pages/Competitions\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Nav from \"./components/Nav\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <section className=\"hero-is-fullheight\">\r\n          <div className=\"head-head\">\r\n            <Nav />\r\n          </div>\r\n          <div className=\"head-body\">\r\n            <Switch>\r\n              <Route path=\"/competitions\" component={Competitions} />\r\n              <Route path=\"/detail\" component={Detail} />\r\n              <Route path=\"/nomatch\" component={NoMatch} />\r\n              <Redirect from=\"/\" exact to=\"/competitions\" />\r\n              <Redirect to=\"/nomatch\" />\r\n            </Switch>\r\n          </div>\r\n          <div className=\"head-foot\">\r\n            <Footer />\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}